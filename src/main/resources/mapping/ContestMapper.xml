<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bppleman.dao.ContestDao">
    <resultMap type="Contest" id="contestResultMap">
        <id property="id" column="id"></id>
        <result property="name" column="name"></result>
        <result property="startTime" column="start_time" javaType="java.sql.Timestamp"></result>
        <result property="endTime" column="end_time" javaType="java.sql.Timestamp"></result>
        <result property="duration" column="duration" javaType="Long"></result>
        <result property="status" column="status"></result>
        <result property="type" column="type"></result>
        <result property="username" column="username"></result>
        <result property="userId" column="user_id"></result>
        <result property="password" column="password"></result>
        <result property="note" column="note"></result>
        <collection property="problemIds" column="id" select="getProblemIdsByContestId"></collection>
    </resultMap>

    <select id="getAllContests" resultMap="contestResultMap" resultType="Contest">
        SELECT * FROM contest
        ORDER BY start_time DESC
    </select>

    <select id="getContestsByParamWithPage" resultMap="contestResultMap" resultType="Contest">
        SELECT * FROM
        (
        SELECT * FROM contest
        <if test="param1 != null and !&quot;&quot;.equals(param1.trim())">
          WHERE ${param1} = #{param2}
        </if>
        ORDER BY start_time DESC
        ) contest_param1
        WHERE  id >=
        (
        SELECT id FROM (
        SELECT * FROM contest
        <if test="param1 != null and !&quot;&quot;.equals(param1.trim())">
            WHERE ${param1} = #{param2}
        </if>
        ORDER BY start_time DESC
        ) contest_param2
        ORDER BY id LIMIT #{param3}, 1
        )
        <if test="param4 != null">
            LIMIT #{param4}
        </if>
    </select>

    <select id="getContestByNameWithPage" resultMap="contestResultMap" resultType="Contest">
        SELECT * FROM
        (
        SELECT * FROM contest
        WHERE name LIKE CONCAT(CONCAT("%",#{param1}),"%")
        ORDER BY start_time DESC
        ) contest_name1
        WHERE  id >=
        (
        SELECT id FROM (
        SELECT * FROM contest
        WHERE name LIKE CONCAT(CONCAT("%",#{param1}),"%")
        ORDER BY start_time DESC
        ) contest_name2
        ORDER BY id LIMIT #{param2}, 1
        )
        <if test="param3 != null">
            LIMIT #{param3}
        </if>
    </select>

    <select id="getContestById" resultMap="contestResultMap" resultType="Contest">
        SELECT * FROM contest
        WHERE id = #{param1}
    </select>

    <select id="getProblemsByContestId" resultMap="com.bppleman.dao.ProblemDao.problemResultMap">
        SELECT p.* FROM problem p,(
        SELECT * FROM
        (
        SELECT * FROM contest_problem
        WHERE contest_id = #{param1}
        ) problem1
        WHERE  id >=
        (
        SELECT id FROM (
        SELECT * FROM contest_problem
        WHERE contest_id = #{param1}
        ) problem2
        ORDER BY id LIMIT #{param2}, 1
        )
        <if test="param3 != null">
          LIMIT #{param3}
        </if>
        ) rcp
        WHERE p.id = rcp.problem_id
    </select>

    <select id="getProblemIdsByContestId" resultType="integer">
        SELECT problem_id FROM contest_problem
        WHERE contest_id = #{param1}
    </select>

    <insert id="insertContest" parameterType="Contest" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO contest
        (name, start_time, end_time, duration, status,
         type, username, user_id, password, note)
        VALUES
        (#{name}, #{startTime}, #{endTime}, #{duration}, #{status},
        #{type}, #{username}, #{userId}, #{password}, #{note})
    </insert>

    <update id="updateContest" parameterType="Contest" keyProperty="id">
        UPDATE contest SET
        name = #{name},
        start_time = #{startTime},
        end_time = #{endTime},
        duration = #{duration},
        status = #{status},
        type = #{type},
        password = #{password}
        WHERE id = #{id}
    </update>

    <insert id="insertProblemToContest">
        INSERT INTO contest_problem (contest_id, problem_id)
        VALUES (#{param1}, #{param2})
    </insert>

    <delete id="deleteProblemFromContest">
        DELETE FROM contest_problem
        WHERE contest_id = #{param1}
        AND problem_id = #{param2}
    </delete>
</mapper>