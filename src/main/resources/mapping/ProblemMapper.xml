<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bppleman.dao.ProblemDao">
    <resultMap type="Problem" id="problemResultMap">
        <id property="id" column="id"></id>
        <result property="title" column="title"></result>
        <result property="description" column="description"></result>
        <result property="input" column="input"></result>
        <result property="output" column="output"></result>
        <result property="sampleInput" column="sampleInput"></result>
        <result property="sampleOutput" column="sampleOutput"></result>
        <result property="hints" column="hints"></result>
        <result property="author" column="author"></result>
        <result property="createTime" column="create_time" javaType="java.sql.Timestamp"></result>
        <association property="problemRatio" column="id" select="com.bppleman.dao.ProblemRatioDao.getProblemRatioByProblemId"></association>
        <!--collection的column需要填写的是：要通过上面的哪个column作为查询的条件-->
        <!--比如这里要通过problem的id查询problem的label，就需要用到上面id这个column-->
        <collection property="problemLabels" column="id" select="com.bppleman.dao.ProblemLabelDao.getProblemLabelByProblemId"></collection>
    </resultMap>

    <select id="getAllProblems" resultMap="problemResultMap">
        SELECT * FROM problem
    </select>

    <select id="getProblemsWithPage" resultMap="problemResultMap">
        SELECT * FROM problem
        WHERE  id >=
        (
        SELECT id FROM problem
        ORDER BY id LIMIT #{param1}, 1
        ) LIMIT #{param2}
    </select>

    <select id="getProblemByProblemId" resultMap="problemResultMap">
        SELECT * FROM problem
        WHERE id=#{id}
    </select>

    <select id="getProblemsByAuthorWithPage" resultMap="problemResultMap">
        SELECT * FROM (
        SELECT * FROM problem
        WHERE author = #{param1}
        ) problem_author1
        WHERE  id >= (
        SELECT id FROM (
        SELECT id FROM problem
        WHERE author = #{param1}
        ) problem_author2
        ORDER BY id LIMIT #{param2}, 1
        ) LIMIT #{param3}
    </select>

    <select id="getProblemsByTitleWithPage" resultMap="problemResultMap">
        SELECT * FROM (
        SELECT * FROM problem
        WHERE title LIKE CONCAT(CONCAT('%',#{param1}),'%')
        ) problem_title1
        WHERE  id >= (
        SELECT id FROM (
        SELECT id FROM problem
        WHERE title LIKE CONCAT(CONCAT('%',#{param1}),'%')
        ) problem_title2
        ORDER BY id LIMIT #{param2}, 1
        ) LIMIT #{param3}
    </select>

    <select id="getProblemTitleByIDs" resultType="map">
        SELECT id,title FROM problem
        WHERE id in
        <foreach collection="list" item="id" open="(" close=")"
                 separator=",">
            #{id}
        </foreach>
    </select>

    <insert id="insertProblem" useGeneratedKeys="true" parameterType="Problem" keyProperty="id">
        INSERT INTO problem
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >id,</if>
            <if test="title != null" >title,</if>
            <if test="description != null" >description,</if>
            <if test="input != null" >input,</if>
            <if test="output != null" >output,</if>
            <if test="sampleInput != null" >sampleinput,</if>
            <if test="sampleOutput != null" >sampleoutput,</if>
            <if test="hints != null" >hints,</if>
            <if test="author != null" >author,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >#{id,jdbcType=INTEGER},</if>
            <if test="title != null" >#{title,jdbcType=VARCHAR},</if>
            <if test="description != null" >#{description,jdbcType=VARCHAR},</if>
            <if test="input != null" >#{input,jdbcType=VARCHAR},</if>
            <if test="output != null" >#{output,jdbcType=VARCHAR},</if>
            <if test="sampleInput != null" >#{sampleInput,jdbcType=VARCHAR},</if>
            <if test="sampleOutput != null" >#{sampleOutput,jdbcType=VARCHAR},</if>
            <if test="hints != null" >#{hints,jdbcType=VARCHAR},</if>
            <if test="author != null" >#{author,jdbcType=VARCHAR},</if>
        </trim>
    </insert>

    <update id="updateProblem" parameterType="Problem">
        UPDATE problem SET
        title = #{title},
        description = #{description},
        input = #{input},
        output = #{output},
        sampleinput = #{sampleInput},
        sampleoutput = #{sampleOutput},
        hints = #{hints},
        author = #{author}
        WHERE id = #{id}
    </update>

    <delete id="deleteProblemById" parameterType="Integer">
        DELETE FROM problem WHERE id = #{problemId}
    </delete>
</mapper>